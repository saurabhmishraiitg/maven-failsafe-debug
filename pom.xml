<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.nexus</groupId>
    <artifactId>maven-failsafe-debug</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>maven-failsafe-debug</name>

    <!-- Parent project from where we are inhering our dependencies and plugins. -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.10.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>

        <maven.compiler.plugin.version>3.7.0</maven.compiler.plugin.version>
        <maven.resources.plugin.version>3.0.2</maven.resources.plugin.version>
        <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
        <maven.javadoc.plugin.version>3.0.0-M1</maven.javadoc.plugin.version>
        <maven.surefire.plugin.version>2.20.1</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>2.20.1</maven.failsafe.plugin.version>
        <maven.checkstyle.plugin.version>3.0.0</maven.checkstyle.plugin.version>
        <maven.checksum.plugin.version>1.2</maven.checksum.plugin.version>
        <maven.install.plugin.version>2.5.2</maven.install.plugin.version>
        <maven.build.helper.plugin.version>3.0.0</maven.build.helper.plugin.version>
        <maven.project.info.reports.plugin.version>2.9</maven.project.info.reports.plugin.version>
        <maven.site.plugin.version>3.6</maven.site.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!-- <version>4.12</version> -->
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compile classes and test files specific to particular java 
                version. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!-- <version>${maven.compiler.plugin.version}</version> -->
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- Enforce encoding constraints on project resources. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!-- <version>${maven.resources.plugin.version}</version> -->
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Executes unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- <version>${maven.surefire.plugin.version}</version> -->
                <configuration>
                    <!-- Skips unit tests if the value of skip.unit.tests 
                        property is true -->
                    <skipTests>false</skipTests>
                    <!-- Excludes integration tests when unit tests are run -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Executes integration tests. -->
            <!-- Executes integration tests. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <!-- <version>${maven.failsafe.plugin.version}</version> -->
                <executions>
                    <!-- Invokes both the integration-test and the verify 
                        goals of the Failsafe Maven plugin -->
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration combine.self="override">
                            <!-- Sets the VM argument line used when integration 
                                tests are run. -->
                            <!-- Skips integration tests if the value of 
                                skip.integration.tests property is true -->
                            <includes>
                                <include>**/IT*.java</include>
                            </includes>
                            <skipITs>true</skipITs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- This will take care of adding new source and resources directory 
                for integration testing. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${maven.build.helper.plugin.version}</version><!--$NO-MVN-MAN-VER$ -->
                <!-- Add a new source directory to our build -->
                <executions>
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the source directory of our integration 
                                tests -->
                            <sources>
                                <source>src/integration/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <!-- Add a new resource directory to our build -->
                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the resource directory of our 
                                integration tests -->
                            <resources>

                                <!-- Placeholders that are found from the 
                                    files located in the configured resource directories are replaced with the 
                                    property values found from the profile specific configuration file. -->
                                <resource>
                                    <directory>src/integration/resources</directory>
                                    <targetPath>resources</targetPath>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>
</project>